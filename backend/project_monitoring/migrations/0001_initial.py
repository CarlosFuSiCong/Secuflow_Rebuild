# Generated by Django 5.2.5 on 2025-10-03 06:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_remove_userprofile_last_activity'),
        ('projects', '0002_alter_project_options_project_deleted_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectMonitoring',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('stc', 'STC (Socio-Technical Congruence)'), ('mc_stc', 'MC-STC (Multi-Class STC)')], help_text='Type of analysis performed', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Current status of the analysis', max_length=10)),
                ('stc_value', models.FloatField(blank=True, help_text='STC value (0-1, higher means better coordination)', null=True)),
                ('risk_score', models.FloatField(blank=True, help_text='Risk score (0-1, higher means more risky)', null=True)),
                ('total_required_edges', models.IntegerField(default=0, help_text='Total coordination requirements')),
                ('satisfied_edges', models.IntegerField(default=0, help_text='Satisfied coordination requirements')),
                ('missed_coordination_count', models.IntegerField(default=0, help_text='Number of missed coordination opportunities')),
                ('unnecessary_coordination_count', models.IntegerField(default=0, help_text='Number of unnecessary coordination activities')),
                ('total_contributors', models.IntegerField(default=0, help_text='Total number of contributors analyzed')),
                ('developer_count', models.IntegerField(default=0, help_text='Number of developers in the analysis')),
                ('security_count', models.IntegerField(default=0, help_text='Number of security team members')),
                ('ops_count', models.IntegerField(default=0, help_text='Number of ops team members')),
                ('branch_analyzed', models.CharField(blank=True, help_text='Git branch analyzed', max_length=100)),
                ('tnm_analysis_id', models.UUIDField(blank=True, help_text='Related TNM analysis ID', null=True)),
                ('stc_analysis_id', models.UUIDField(blank=True, help_text='Related STC analysis ID', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if analysis failed')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_records', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['project', 'analysis_type'], name='project_mon_project_ae00e7_idx'), models.Index(fields=['project', 'created_at'], name='project_mon_project_0fc28e_idx'), models.Index(fields=['status'], name='project_mon_status_ed3530_idx'), models.Index(fields=['stc_value'], name='project_mon_stc_val_4a7dc5_idx'), models.Index(fields=['risk_score'], name='project_mon_risk_sc_db9aef_idx'), models.Index(fields=['completed_at'], name='project_mon_complet_30cfab_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProjectMonitoringSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notify_on_completion', models.BooleanField(default=True, help_text='Send notification when analysis completes')),
                ('notify_on_risk_increase', models.BooleanField(default=True, help_text='Send notification when risk score increases significantly')),
                ('notify_on_coordination_drop', models.BooleanField(default=True, help_text='Send notification when coordination efficiency drops')),
                ('risk_threshold', models.FloatField(default=0.7, help_text='Risk score threshold for notifications (0-1)')),
                ('coordination_threshold', models.FloatField(default=0.5, help_text='Coordination efficiency threshold for notifications (0-1)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_notification_at', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_subscriptions', to='projects.project')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_subscriptions', to='accounts.userprofile')),
            ],
            options={
                'indexes': [models.Index(fields=['user_profile'], name='project_mon_user_pr_a5e376_idx'), models.Index(fields=['project'], name='project_mon_project_579b46_idx')],
                'unique_together': {('user_profile', 'project')},
            },
        ),
    ]
