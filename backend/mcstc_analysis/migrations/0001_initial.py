# Generated by Django 5.2.5 on 2025-10-03 08:33

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0002_alter_project_options_project_deleted_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MCSTCAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('monte_carlo_iterations', models.IntegerField(default=1000)),
                ('functional_roles_used', models.JSONField(default=list, help_text='List of functional roles used in this analysis')),
                ('results_file', models.CharField(blank=True, max_length=255, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('mcstc_value', models.FloatField(blank=True, help_text='MC-STC value (0-1, higher means better multi-class coordination)', null=True)),
                ('inter_class_coordination_score', models.FloatField(blank=True, help_text='Inter-class coordination score', null=True)),
                ('intra_class_coordination_score', models.FloatField(blank=True, help_text='Intra-class coordination score', null=True)),
                ('developer_security_coordination', models.FloatField(blank=True, help_text='Coordination score between developers and security team', null=True)),
                ('developer_ops_coordination', models.FloatField(blank=True, help_text='Coordination score between developers and ops team', null=True)),
                ('security_ops_coordination', models.FloatField(blank=True, help_text='Coordination score between security and ops team', null=True)),
                ('top_coordination_pairs', models.JSONField(blank=True, default=list, help_text='Top coordination pairs with highest MC-STC impact')),
                ('branch_analyzed', models.CharField(blank=True, help_text='Git branch analyzed', max_length=100)),
                ('total_contributors_analyzed', models.IntegerField(default=0, help_text='Total number of contributors included in analysis')),
                ('developer_count', models.IntegerField(default=0, help_text='Number of developers in analysis')),
                ('security_count', models.IntegerField(default=0, help_text='Number of security personnel in analysis')),
                ('ops_count', models.IntegerField(default=0, help_text='Number of ops personnel in analysis')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcstc_analyses', to='projects.project')),
            ],
            options={
                'verbose_name': 'MC-STC Analysis',
                'verbose_name_plural': 'MC-STC Analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='MCSTCCoordinationPair',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contributor1_id', models.CharField(help_text='First contributor identifier', max_length=100)),
                ('contributor1_role', models.CharField(help_text="First contributor's functional role", max_length=20)),
                ('contributor1_email', models.EmailField(blank=True, help_text="First contributor's email", max_length=254)),
                ('contributor2_id', models.CharField(help_text='Second contributor identifier', max_length=100)),
                ('contributor2_role', models.CharField(help_text="Second contributor's functional role", max_length=20)),
                ('contributor2_email', models.EmailField(blank=True, help_text="Second contributor's email", max_length=254)),
                ('coordination_requirement', models.FloatField(help_text='Coordination requirement strength (0-1)')),
                ('actual_coordination', models.FloatField(help_text='Actual coordination observed (0-1)')),
                ('coordination_gap', models.FloatField(help_text='Gap between required and actual coordination')),
                ('impact_score', models.FloatField(help_text='Impact score on overall MC-STC')),
                ('is_inter_class', models.BooleanField(default=False, help_text='Whether this is inter-class coordination (different roles)')),
                ('is_missed_coordination', models.BooleanField(default=False, help_text='Whether this represents missed coordination')),
                ('is_unnecessary_coordination', models.BooleanField(default=False, help_text='Whether this represents unnecessary coordination')),
                ('shared_files', models.JSONField(default=list, help_text='List of files both contributors work on')),
                ('coordination_files', models.JSONField(default=list, help_text='Files where coordination is most critical')),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coordination_pairs', to='mcstc_analysis.mcstcanalysis')),
            ],
            options={
                'verbose_name': 'MC-STC Coordination Pair',
                'verbose_name_plural': 'MC-STC Coordination Pairs',
                'ordering': ['-impact_score'],
                'unique_together': {('analysis', 'contributor1_id', 'contributor2_id')},
            },
        ),
    ]
