# Generated by Django 5.2.5 on 2025-09-16 07:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contributors', '0001_initial'),
        ('projects', '0001_initial'),
        ('tnm_integration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunctionalClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoordinationRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(choices=[('STC', 'STC'), ('MC-STC', 'MC-STC')], max_length=16)),
                ('td_source', models.CharField(choices=[('LD', 'Logical (co-change)'), ('SD', 'Syntactic')], max_length=8)),
                ('ca_source', models.CharField(max_length=32)),
                ('class_config', models.JSONField(blank=True, default=dict)),
                ('time_window', models.CharField(blank=True, max_length=64, null=True)),
                ('score', models.DecimalField(decimal_places=3, max_digits=6)),
                ('cr_count', models.IntegerField()),
                ('diff_count', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='coord_runs', to='tnm_integration.tnmjob')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coord_runs', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='CrEdge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('contributor_i', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.contributor')),
                ('contributor_j', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.contributor')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cr_edges', to='coordination.coordinationrun')),
            ],
        ),
        migrations.CreateModel(
            name='ContributorClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=40)),
                ('threshold', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('evidence', models.JSONField(blank=True, null=True)),
                ('basis_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='tnm_integration.tnmjob')),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classifications', to='contributors.contributor')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrib_classes', to='projects.project')),
                ('class_ref', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='members', to='coordination.functionalclass')),
            ],
        ),
        migrations.CreateModel(
            name='TaEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edit_count', models.IntegerField(default=0)),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contributors.contributor')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contributors.codefile')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stc_ta', to='tnm_integration.tnmjob')),
            ],
        ),
        migrations.CreateModel(
            name='TdEdge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('file_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.codefile')),
                ('file_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.codefile')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stc_td', to='tnm_integration.tnmjob')),
            ],
        ),
        migrations.CreateModel(
            name='CaEdge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('evidence', models.CharField(choices=[('same_commit', 'Same commit'), ('same_file', 'Same file'), ('co_edit', 'Co-edit')], max_length=24)),
                ('contributor_i', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.contributor')),
                ('contributor_j', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contributors.contributor')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stc_ca', to='tnm_integration.tnmjob')),
            ],
            options={
                'indexes': [models.Index(fields=['job', 'weight'], name='idx_ca_job_weight')],
                'constraints': [models.UniqueConstraint(fields=('job', 'contributor_i', 'contributor_j'), name='uq_ca'), models.CheckConstraint(condition=models.Q(('contributor_i__lt', models.F('contributor_j'))), name='ck_ca_order')],
            },
        ),
        migrations.AddIndex(
            model_name='coordinationrun',
            index=models.Index(fields=['project', 'created_at'], name='idx_run_proj_time'),
        ),
        migrations.AddIndex(
            model_name='coordinationrun',
            index=models.Index(fields=['algorithm', 'created_at'], name='idx_run_algo_time'),
        ),
        migrations.AddIndex(
            model_name='credge',
            index=models.Index(fields=['run', 'weight'], name='idx_cr_run_weight'),
        ),
        migrations.AddConstraint(
            model_name='credge',
            constraint=models.UniqueConstraint(fields=('run', 'contributor_i', 'contributor_j'), name='uq_cr'),
        ),
        migrations.AddConstraint(
            model_name='credge',
            constraint=models.CheckConstraint(condition=models.Q(('contributor_i__lt', models.F('contributor_j'))), name='ck_cr_order'),
        ),
        migrations.AddIndex(
            model_name='contributorclassification',
            index=models.Index(fields=['class_ref', 'project'], name='idx_class_lookup'),
        ),
        migrations.AddConstraint(
            model_name='contributorclassification',
            constraint=models.UniqueConstraint(fields=('project', 'contributor'), name='uq_contrib_class'),
        ),
        migrations.AddIndex(
            model_name='taentry',
            index=models.Index(fields=['job', 'edit_count'], name='idx_ta_job_edit'),
        ),
        migrations.AddConstraint(
            model_name='taentry',
            constraint=models.UniqueConstraint(fields=('job', 'contributor', 'file'), name='uq_ta'),
        ),
        migrations.AddIndex(
            model_name='tdedge',
            index=models.Index(fields=['job', 'weight'], name='idx_td_job_weight'),
        ),
        migrations.AddConstraint(
            model_name='tdedge',
            constraint=models.UniqueConstraint(fields=('job', 'file_a', 'file_b'), name='uq_td'),
        ),
        migrations.AddConstraint(
            model_name='tdedge',
            constraint=models.CheckConstraint(condition=models.Q(('file_a__lt', models.F('file_b'))), name='ck_td_order'),
        ),
    ]
